{"name":"Fastadapter","tagline":"The bullet proof, fast and easy to use adapter library, which minimizes developing time to a fraction...","body":"#FastAdapter  [![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.mikepenz/fastadapter/badge.svg?style=flat)](https://maven-badges.herokuapp.com/maven-central/com.mikepenz/fastadapter) [![Join the chat at https://gitter.im/mikepenz/fastadapter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/mikepenz/fastadapter?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\n> The RecyclerView is one of the most used widgets in the Android world, and with it you have to implement an Adapter which provides the items for the view. Most use cases require the same base logic, but require you to write everything again and again.\r\n\r\nThe FastAdapter is here to simplify this process. You don't have to worry about the adapter anymore. Just write the logic for how your view/item should look like, and you are done.\r\nThis library has a fast and highly optimized core which provides core functionality, most apps require. It also prevents common mistakes by taking away those steps from the devs. \r\nBeside being blazing fast, minimizing the code you need to write, it is also really easy to extend. Just provide another Adapter implementation, hook into the adapter chain, custom select / deselection behaviors. Everything is possible.\r\n\r\n##A quick overview:\r\n- Click / Long-Click listeners\r\n- Selection / Multi-Selection\r\n- Expandable items\r\n- Write less code, get better results\r\n- Simple Drag & Drop\r\n- Headers\r\n- Footers\r\n- Highly optimized code\r\n- Includes suggestions from the Android Team\r\n- Easily extensible\r\n- Chain other Adapters\r\n- Comes with useful Helpers\r\n - ActionModeHelper\r\n - More to come...\r\n\r\n#Preview\r\n##Screenshots\r\n\r\n#Include in your project\r\n##Using Maven\r\n```javascript\r\ncompile('com.mikepenz:fastadapter:0.9.0@aar') {\r\n\ttransitive = true\r\n}\r\n```\r\n\r\n##How to use\r\n###1. Implement your item (the easy way)\r\nJust create a class which extends the `AbstractItem` as shown below. Implement the methods, and your item is ready.\r\n```java\r\npublic class SampleItem extends AbstractItem<SampleItem, SampleItem.ViewHolder> {\r\n    public String name;\r\n    public String description;\r\n\r\n    //The unique ID for this type of item\r\n    @Override\r\n    public int getType() {\r\n        return R.id.fastadapter_sampleitem_id;\r\n    }\r\n\r\n    //The layout to be used for this type of item\r\n    @Override\r\n    public int getLayoutRes() {\r\n        return R.layout.sample_item;\r\n    }\r\n\r\n    //The logic to bind your data to the view\r\n    @Override\r\n    public void bindView(RecyclerView.ViewHolder holder) {\r\n        Context ctx = holder.itemView.getContext();\r\n        //get our viewHolder\r\n        ViewHolder viewHolder = (ViewHolder) holder;\r\n\r\n        //set the item selected if it is\r\n        viewHolder.itemView.setSelected(isSelected());\r\n\r\n        //set the text for the name\r\n        viewHolder.name.setText(name);\r\n        //set the text for the description or hide\r\n        viewHolder.description.setText(description);\r\n    }\r\n\r\n    //The viewHolder used for this item. This viewHolder is always reused by the RecyclerView so scrolling is blazing fast\r\n    protected static class ViewHolder extends RecyclerView.ViewHolder {\r\n        protected View view;\r\n        protected TextView name;\r\n        protected TextView description;\r\n\r\n        public ViewHolder(View view) {\r\n            super(view);\r\n            this.view = view;\r\n            this.name = (TextView) view.findViewById(com.mikepenz.materialdrawer.R.id.material_drawer_name);\r\n            this.description = (TextView) view.findViewById(com.mikepenz.materialdrawer.R.id.material_drawer_description);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n###2. Set the Adapter to the RecyclerView\r\n```java\r\n//create our FastAdapter which will manage everything\r\nFastAdapter fastAdapter = new FastAdapter();\r\n\r\n//create our ItemAdapter which will host our items\r\nItemAdapter itemAdapter = new ItemAdapter();\r\n\r\n//find the RecyclerView\r\nRecyclerView rv = (RecyclerView) findViewById(R.id.rv);\r\n\r\n//set our adapters to the RecyclerView\r\n//we wrap our FastAdapter inside the ItemAdapter -> This allows us to chain adapters for more complex useCases\r\nrv.setAdapter(itemAdapter.wrap(fastAdapter));\r\n\r\n//GENERATE or FETCH YOUR ITEMS...\r\n\r\n//set the items to your ItemAdapter\r\nitemAdapter.add(ITEMS);\r\n```\r\n\r\n## Libs used in sample app:\r\nMike Penz:\r\n- AboutLibraries https://github.com/mikepenz/AboutLibraries\r\n- Android-Iconics https://github.com/mikepenz/Android-Iconics\r\n- ItemAnimators https://github.com/mikepenz/ItemAnimators\r\n- MaterialDrawer https://github.com/mikepenz/MaterialDrawer\r\n\r\nOther Libs:\r\n- Butterknife https://github.com/JakeWharton/butterknife\r\n- Glide https://github.com/bumptech/glide\r\n- MaterialScrollBar https://github.com/krimin-killr21/MaterialScrollBar\r\n- StickyRecyclerHeadersAdapter https://github.com/timehop/sticky-headers-recyclerview\r\n\r\n\r\n#Developed By\r\n\r\n* Mike Penz \r\n * [mikepenz.com](http://mikepenz.com) - <mikepenz@gmail.com>\r\n * [paypal.me/mikepenz](http://paypal.me/mikepenz)\r\n\r\n#License\r\n\r\n    Copyright 2016 Mike Penz\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n","google":"UA-56332427-1","note":"Don't delete this file! It's used internally to help with page regeneration."}